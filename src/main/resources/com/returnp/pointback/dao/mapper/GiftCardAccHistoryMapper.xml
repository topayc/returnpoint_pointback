<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.GiftCardAccHistoryMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.GiftCardAccHistory">
    <id column="giftCardAccHistoryNo" jdbcType="INTEGER" property="giftCardAccHistoryNo" />
    <result column="memberNo" jdbcType="INTEGER" property="memberNo" />
    <result column="giftCardIssueNo" jdbcType="INTEGER" property="giftCardIssueNo" />
    <result column="baseAmount" jdbcType="INTEGER" property="baseAmount" />
    <result column="accRate" jdbcType="REAL" property="accRate" />
    <result column="accAmount" jdbcType="REAL" property="accAmount" />
    <result column="accTime" jdbcType="TIMESTAMP" property="accTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    giftCardAccHistoryNo, memberNo, giftCardIssueNo, baseAmount, accRate, accAmount, 
    accTime, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gift_card_acc_history
    where giftCardAccHistoryNo = #{giftCardAccHistoryNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gift_card_acc_history
    where giftCardAccHistoryNo = #{giftCardAccHistoryNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.GiftCardAccHistory">
    insert into gift_card_acc_history (giftCardAccHistoryNo, memberNo, giftCardIssueNo, 
      baseAmount, accRate, accAmount, 
      accTime, createTime, updateTime
      )
    values (#{giftCardAccHistoryNo,jdbcType=INTEGER}, #{memberNo,jdbcType=INTEGER}, #{giftCardIssueNo,jdbcType=INTEGER}, 
      #{baseAmount,jdbcType=INTEGER}, #{accRate,jdbcType=REAL}, #{accAmount,jdbcType=REAL}, 
      #{accTime,jdbcType=TIMESTAMP}, NOW(), NOW()
      )
      
          <selectKey keyProperty="giftCardAccHistoryNo" resultType="java.lang.Integer" order ="AFTER">
		    SELECT LAST_INSERT_ID()
	 </selectKey>	
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.GiftCardAccHistory">
    insert into gift_card_acc_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="giftCardAccHistoryNo != null">
        giftCardAccHistoryNo,
      </if>
      <if test="memberNo != null">
        memberNo,
      </if>
      <if test="giftCardIssueNo != null">
        giftCardIssueNo,
      </if>
      <if test="baseAmount != null">
        baseAmount,
      </if>
      <if test="accRate != null">
        accRate,
      </if>
      <if test="accAmount != null">
        accAmount,
      </if>
      <if test="accTime != null">
        accTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="giftCardAccHistoryNo != null">
        #{giftCardAccHistoryNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardIssueNo != null">
        #{giftCardIssueNo,jdbcType=INTEGER},
      </if>
      <if test="baseAmount != null">
        #{baseAmount,jdbcType=INTEGER},
      </if>
      <if test="accRate != null">
        #{accRate,jdbcType=REAL},
      </if>
      <if test="accAmount != null">
        #{accAmount,jdbcType=REAL},
      </if>
      <if test="accTime != null">
        #{accTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.GiftCardAccHistory">
    update gift_card_acc_history
    <set>
      <if test="memberNo != null">
        memberNo = #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardIssueNo != null">
        giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER},
      </if>
      <if test="baseAmount != null">
        baseAmount = #{baseAmount,jdbcType=INTEGER},
      </if>
      <if test="accRate != null">
        accRate = #{accRate,jdbcType=REAL},
      </if>
      <if test="accAmount != null">
        accAmount = #{accAmount,jdbcType=REAL},
      </if>
      <if test="accTime != null">
        accTime = #{accTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where giftCardAccHistoryNo = #{giftCardAccHistoryNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.GiftCardAccHistory">
    update gift_card_acc_history
    set memberNo = #{memberNo,jdbcType=INTEGER},
      giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER},
      baseAmount = #{baseAmount,jdbcType=INTEGER},
      accRate = #{accRate,jdbcType=REAL},
      accAmount = #{accAmount,jdbcType=REAL},
      accTime = #{accTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime =NOW())
    where giftCardAccHistoryNo = #{giftCardAccHistoryNo,jdbcType=INTEGER}
  </update>
</mapper>