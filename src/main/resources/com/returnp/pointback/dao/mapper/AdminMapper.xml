<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.Admin">
    <id column="adminNo" jdbcType="INTEGER" property="adminNo" />
    <result column="adminName" jdbcType="VARCHAR" property="adminName" />
    <result column="adminEmail" jdbcType="VARCHAR" property="adminEmail" />
    <result column="adminPassword" jdbcType="VARCHAR" property="adminPassword" />
    <result column="regAdminNo" jdbcType="INTEGER" property="regAdminNo" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    adminNo, adminName, adminEmail, adminPassword, regAdminNo, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where adminNo = #{adminNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where adminNo = #{adminNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.Admin">
    insert into admin (adminNo, adminName, adminEmail, 
      adminPassword, regAdminNo, createTime, 
      updateTime)
    values (#{adminNo,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{adminEmail,jdbcType=VARCHAR}, 
      #{adminPassword,jdbcType=VARCHAR}, #{regAdminNo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.Admin">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminNo != null">
        adminNo,
      </if>
      <if test="adminName != null">
        adminName,
      </if>
      <if test="adminEmail != null">
        adminEmail,
      </if>
      <if test="adminPassword != null">
        adminPassword,
      </if>
      <if test="regAdminNo != null">
        regAdminNo,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminNo != null">
        #{adminNo,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminEmail != null">
        #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="regAdminNo != null">
        #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.Admin">
    update admin
    <set>
      <if test="adminName != null">
        adminName = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminEmail != null">
        adminEmail = #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        adminPassword = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="regAdminNo != null">
        regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where adminNo = #{adminNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.Admin">
    update admin
    set adminName = #{adminName,jdbcType=VARCHAR},
      adminEmail = #{adminEmail,jdbcType=VARCHAR},
      adminPassword = #{adminPassword,jdbcType=VARCHAR},
      regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where adminNo = #{adminNo,jdbcType=INTEGER}
  </update>
</mapper>