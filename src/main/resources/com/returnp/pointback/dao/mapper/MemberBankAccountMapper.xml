<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.MemberBankAccountMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.MemberBankAccount">
    <id column="memberBankAccountNo" jdbcType="INTEGER" property="memberBankAccountNo" />
    <result column="memberNo" jdbcType="INTEGER" property="memberNo" />
    <result column="bankName" jdbcType="VARCHAR" property="bankName" />
    <result column="accountOwner" jdbcType="VARCHAR" property="accountOwner" />
    <result column="bankAccount" jdbcType="VARCHAR" property="bankAccount" />
    <result column="accountStatus" jdbcType="VARCHAR" property="accountStatus" />
    <result column="isDefault" jdbcType="VARCHAR" property="isDefault" />
    <result column="bankPurpose" jdbcType="VARCHAR" property="bankPurpose" />
    <result column="statusMessage" jdbcType="VARCHAR" property="statusMessage" />
    <result column="regAdminNo" jdbcType="INTEGER" property="regAdminNo" />
    <result column="regType" jdbcType="CHAR" property="regType" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    memberBankAccountNo, memberNo, bankName, accountOwner, bankAccount, accountStatus, 
    isDefault, bankPurpose, statusMessage, regAdminNo, regType, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_bank_account
    where memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_bank_account
    where memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.MemberBankAccount">
    insert into member_bank_account (memberBankAccountNo, memberNo, bankName, 
      accountOwner, bankAccount, accountStatus, 
      isDefault, bankPurpose, statusMessage, 
      regAdminNo, regType, createTime, 
      updateTime)
    values (#{memberBankAccountNo,jdbcType=INTEGER}, #{memberNo,jdbcType=INTEGER}, #{bankName,jdbcType=VARCHAR}, 
      #{accountOwner,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, #{accountStatus,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=VARCHAR}, #{bankPurpose,jdbcType=VARCHAR}, #{statusMessage,jdbcType=VARCHAR}, 
      #{regAdminNo,jdbcType=INTEGER}, #{regType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.MemberBankAccount">
    insert into member_bank_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberBankAccountNo != null">
        memberBankAccountNo,
      </if>
      <if test="memberNo != null">
        memberNo,
      </if>
      <if test="bankName != null">
        bankName,
      </if>
      <if test="accountOwner != null">
        accountOwner,
      </if>
      <if test="bankAccount != null">
        bankAccount,
      </if>
      <if test="accountStatus != null">
        accountStatus,
      </if>
      <if test="isDefault != null">
        isDefault,
      </if>
      <if test="bankPurpose != null">
        bankPurpose,
      </if>
      <if test="statusMessage != null">
        statusMessage,
      </if>
      <if test="regAdminNo != null">
        regAdminNo,
      </if>
      <if test="regType != null">
        regType,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberBankAccountNo != null">
        #{memberBankAccountNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="accountOwner != null">
        #{accountOwner,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="bankPurpose != null">
        #{bankPurpose,jdbcType=VARCHAR},
      </if>
      <if test="statusMessage != null">
        #{statusMessage,jdbcType=VARCHAR},
      </if>
      <if test="regAdminNo != null">
        #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="regType != null">
        #{regType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.MemberBankAccount">
    update member_bank_account
    <set>
      <if test="memberNo != null">
        memberNo = #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="bankName != null">
        bankName = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="accountOwner != null">
        accountOwner = #{accountOwner,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bankAccount = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        accountStatus = #{accountStatus,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        isDefault = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="bankPurpose != null">
        bankPurpose = #{bankPurpose,jdbcType=VARCHAR},
      </if>
      <if test="statusMessage != null">
        statusMessage = #{statusMessage,jdbcType=VARCHAR},
      </if>
      <if test="regAdminNo != null">
        regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="regType != null">
        regType = #{regType,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.MemberBankAccount">
    update member_bank_account
    set memberNo = #{memberNo,jdbcType=INTEGER},
      bankName = #{bankName,jdbcType=VARCHAR},
      accountOwner = #{accountOwner,jdbcType=VARCHAR},
      bankAccount = #{bankAccount,jdbcType=VARCHAR},
      accountStatus = #{accountStatus,jdbcType=VARCHAR},
      isDefault = #{isDefault,jdbcType=VARCHAR},
      bankPurpose = #{bankPurpose,jdbcType=VARCHAR},
      statusMessage = #{statusMessage,jdbcType=VARCHAR},
      regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      regType = #{regType,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER}
  </update>
</mapper>