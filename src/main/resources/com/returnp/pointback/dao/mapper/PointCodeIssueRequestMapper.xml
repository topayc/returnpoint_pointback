<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.PointCodeIssueRequestMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.PointCodeIssueRequest">
    <id column="pointCodeIssueRequestNo" jdbcType="INTEGER" property="pointCodeIssueRequestNo" />
    <result column="memberNo" jdbcType="INTEGER" property="memberNo" />
    <result column="affiliateNo" jdbcType="INTEGER" property="affiliateNo" />
    <result column="issueType" jdbcType="VARCHAR" property="issueType" />
    <result column="payAmount" jdbcType="INTEGER" property="payAmount" />
    <result column="accPointRate" jdbcType="REAL" property="accPointRate" />
    <result column="accPointAmount" jdbcType="REAL" property="accPointAmount" />
    <result column="accTargetRange" jdbcType="VARCHAR" property="accTargetRange" />
    <result column="depositAmount" jdbcType="REAL" property="depositAmount" />
    <result column="depositRate" jdbcType="REAL" property="depositRate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="uploadFile" jdbcType="VARCHAR" property="uploadFile" />
    <result column="depositBankAccount" jdbcType="VARCHAR" property="depositBankAccount" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="useStartTime" jdbcType="TIMESTAMP" property="useStartTime" />
    <result column="useEndTime" jdbcType="TIMESTAMP" property="useEndTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    pointCodeIssueRequestNo, memberNo, affiliateNo, issueType, payAmount, accPointRate, 
    accPointAmount, accTargetRange, depositAmount, depositRate, status, uploadFile, depositBankAccount, 
    publisher, useStartTime, useEndTime, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from point_code_issue_request
    where pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from point_code_issue_request
    where pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.PointCodeIssueRequest">
    insert into point_code_issue_request (pointCodeIssueRequestNo, memberNo, 
      affiliateNo, issueType, payAmount, 
      accPointRate, accPointAmount, accTargetRange, 
      depositAmount, depositRate, status, 
      uploadFile, depositBankAccount, publisher, 
      useStartTime, useEndTime, createTime, 
      updateTime)
    values (#{pointCodeIssueRequestNo,jdbcType=INTEGER}, #{memberNo,jdbcType=INTEGER}, 
      #{affiliateNo,jdbcType=INTEGER}, #{issueType,jdbcType=VARCHAR}, #{payAmount,jdbcType=INTEGER}, 
      #{accPointRate,jdbcType=REAL}, #{accPointAmount,jdbcType=REAL}, #{accTargetRange,jdbcType=VARCHAR}, 
      #{depositAmount,jdbcType=REAL}, #{depositRate,jdbcType=REAL}, #{status,jdbcType=VARCHAR}, 
      #{uploadFile,jdbcType=VARCHAR}, #{depositBankAccount,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, 
      #{useStartTime,jdbcType=TIMESTAMP}, #{useEndTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.PointCodeIssueRequest">
    insert into point_code_issue_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pointCodeIssueRequestNo != null">
        pointCodeIssueRequestNo,
      </if>
      <if test="memberNo != null">
        memberNo,
      </if>
      <if test="affiliateNo != null">
        affiliateNo,
      </if>
      <if test="issueType != null">
        issueType,
      </if>
      <if test="payAmount != null">
        payAmount,
      </if>
      <if test="accPointRate != null">
        accPointRate,
      </if>
      <if test="accPointAmount != null">
        accPointAmount,
      </if>
      <if test="accTargetRange != null">
        accTargetRange,
      </if>
      <if test="depositAmount != null">
        depositAmount,
      </if>
      <if test="depositRate != null">
        depositRate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="uploadFile != null">
        uploadFile,
      </if>
      <if test="depositBankAccount != null">
        depositBankAccount,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="useStartTime != null">
        useStartTime,
      </if>
      <if test="useEndTime != null">
        useEndTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pointCodeIssueRequestNo != null">
        #{pointCodeIssueRequestNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="affiliateNo != null">
        #{affiliateNo,jdbcType=INTEGER},
      </if>
      <if test="issueType != null">
        #{issueType,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="accPointRate != null">
        #{accPointRate,jdbcType=REAL},
      </if>
      <if test="accPointAmount != null">
        #{accPointAmount,jdbcType=REAL},
      </if>
      <if test="accTargetRange != null">
        #{accTargetRange,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        #{depositAmount,jdbcType=REAL},
      </if>
      <if test="depositRate != null">
        #{depositRate,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadFile != null">
        #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="depositBankAccount != null">
        #{depositBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="useStartTime != null">
        #{useStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useEndTime != null">
        #{useEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.PointCodeIssueRequest">
    update point_code_issue_request
    <set>
      <if test="memberNo != null">
        memberNo = #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="affiliateNo != null">
        affiliateNo = #{affiliateNo,jdbcType=INTEGER},
      </if>
      <if test="issueType != null">
        issueType = #{issueType,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        payAmount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="accPointRate != null">
        accPointRate = #{accPointRate,jdbcType=REAL},
      </if>
      <if test="accPointAmount != null">
        accPointAmount = #{accPointAmount,jdbcType=REAL},
      </if>
      <if test="accTargetRange != null">
        accTargetRange = #{accTargetRange,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        depositAmount = #{depositAmount,jdbcType=REAL},
      </if>
      <if test="depositRate != null">
        depositRate = #{depositRate,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="uploadFile != null">
        uploadFile = #{uploadFile,jdbcType=VARCHAR},
      </if>
      <if test="depositBankAccount != null">
        depositBankAccount = #{depositBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="useStartTime != null">
        useStartTime = #{useStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="useEndTime != null">
        useEndTime = #{useEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.PointCodeIssueRequest">
    update point_code_issue_request
    set memberNo = #{memberNo,jdbcType=INTEGER},
      affiliateNo = #{affiliateNo,jdbcType=INTEGER},
      issueType = #{issueType,jdbcType=VARCHAR},
      payAmount = #{payAmount,jdbcType=INTEGER},
      accPointRate = #{accPointRate,jdbcType=REAL},
      accPointAmount = #{accPointAmount,jdbcType=REAL},
      accTargetRange = #{accTargetRange,jdbcType=VARCHAR},
      depositAmount = #{depositAmount,jdbcType=REAL},
      depositRate = #{depositRate,jdbcType=REAL},
      status = #{status,jdbcType=VARCHAR},
      uploadFile = #{uploadFile,jdbcType=VARCHAR},
      depositBankAccount = #{depositBankAccount,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      useStartTime = #{useStartTime,jdbcType=TIMESTAMP},
      useEndTime = #{useEndTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER}
  </update>
</mapper>