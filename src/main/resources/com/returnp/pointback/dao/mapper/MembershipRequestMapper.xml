<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.MembershipRequestMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.MembershipRequest">
    <id column="membershipRequestNo" jdbcType="INTEGER" property="membershipRequestNo" />
    <result column="memberNo" jdbcType="INTEGER" property="memberNo" />
    <result column="depositor" jdbcType="VARCHAR" property="depositor" />
    <result column="companyBankAccountNo" jdbcType="INTEGER" property="companyBankAccountNo" />
    <result column="recommenderNo" jdbcType="INTEGER" property="recommenderNo" />
    <result column="paymentAmount" jdbcType="INTEGER" property="paymentAmount" />
    <result column="paymentStatus" jdbcType="CHAR" property="paymentStatus" />
    <result column="gradeType" jdbcType="VARCHAR" property="gradeType" />
    <result column="paymentType" jdbcType="VARCHAR" property="paymentType" />
    <result column="regType" jdbcType="CHAR" property="regType" />
    <result column="regAdminNo" jdbcType="INTEGER" property="regAdminNo" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    membershipRequestNo, memberNo, depositor, companyBankAccountNo, recommenderNo, paymentAmount, 
    paymentStatus, gradeType, paymentType, regType, regAdminNo, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from membership_request
    where membershipRequestNo = #{membershipRequestNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from membership_request
    where membershipRequestNo = #{membershipRequestNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.MembershipRequest">
    insert into membership_request (membershipRequestNo, memberNo, depositor, 
      companyBankAccountNo, recommenderNo, paymentAmount, 
      paymentStatus, gradeType, paymentType, 
      regType, regAdminNo, createTime, 
      updateTime)
    values (#{membershipRequestNo,jdbcType=INTEGER}, #{memberNo,jdbcType=INTEGER}, #{depositor,jdbcType=VARCHAR}, 
      #{companyBankAccountNo,jdbcType=INTEGER}, #{recommenderNo,jdbcType=INTEGER}, #{paymentAmount,jdbcType=INTEGER}, 
      #{paymentStatus,jdbcType=CHAR}, #{gradeType,jdbcType=VARCHAR}, #{paymentType,jdbcType=VARCHAR}, 
      #{regType,jdbcType=CHAR}, #{regAdminNo,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.MembershipRequest">
    insert into membership_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="membershipRequestNo != null">
        membershipRequestNo,
      </if>
      <if test="memberNo != null">
        memberNo,
      </if>
      <if test="depositor != null">
        depositor,
      </if>
      <if test="companyBankAccountNo != null">
        companyBankAccountNo,
      </if>
      <if test="recommenderNo != null">
        recommenderNo,
      </if>
      <if test="paymentAmount != null">
        paymentAmount,
      </if>
      <if test="paymentStatus != null">
        paymentStatus,
      </if>
      <if test="gradeType != null">
        gradeType,
      </if>
      <if test="paymentType != null">
        paymentType,
      </if>
      <if test="regType != null">
        regType,
      </if>
      <if test="regAdminNo != null">
        regAdminNo,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="membershipRequestNo != null">
        #{membershipRequestNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="depositor != null">
        #{depositor,jdbcType=VARCHAR},
      </if>
      <if test="companyBankAccountNo != null">
        #{companyBankAccountNo,jdbcType=INTEGER},
      </if>
      <if test="recommenderNo != null">
        #{recommenderNo,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null">
        #{paymentAmount,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null">
        #{paymentStatus,jdbcType=CHAR},
      </if>
      <if test="gradeType != null">
        #{gradeType,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        #{regType,jdbcType=CHAR},
      </if>
      <if test="regAdminNo != null">
        #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.MembershipRequest">
    update membership_request
    <set>
      <if test="memberNo != null">
        memberNo = #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="depositor != null">
        depositor = #{depositor,jdbcType=VARCHAR},
      </if>
      <if test="companyBankAccountNo != null">
        companyBankAccountNo = #{companyBankAccountNo,jdbcType=INTEGER},
      </if>
      <if test="recommenderNo != null">
        recommenderNo = #{recommenderNo,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null">
        paymentAmount = #{paymentAmount,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null">
        paymentStatus = #{paymentStatus,jdbcType=CHAR},
      </if>
      <if test="gradeType != null">
        gradeType = #{gradeType,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null">
        paymentType = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="regType != null">
        regType = #{regType,jdbcType=CHAR},
      </if>
      <if test="regAdminNo != null">
        regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where membershipRequestNo = #{membershipRequestNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.MembershipRequest">
    update membership_request
    set memberNo = #{memberNo,jdbcType=INTEGER},
      depositor = #{depositor,jdbcType=VARCHAR},
      companyBankAccountNo = #{companyBankAccountNo,jdbcType=INTEGER},
      recommenderNo = #{recommenderNo,jdbcType=INTEGER},
      paymentAmount = #{paymentAmount,jdbcType=INTEGER},
      paymentStatus = #{paymentStatus,jdbcType=CHAR},
      gradeType = #{gradeType,jdbcType=VARCHAR},
      paymentType = #{paymentType,jdbcType=VARCHAR},
      regType = #{regType,jdbcType=CHAR},
      regAdminNo = #{regAdminNo,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where membershipRequestNo = #{membershipRequestNo,jdbcType=INTEGER}
  </update>
</mapper>