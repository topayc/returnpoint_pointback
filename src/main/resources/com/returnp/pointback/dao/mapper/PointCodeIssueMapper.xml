<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.PointCodeIssueMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.PointCodeIssue">
    <id column="pointCodeIssueNo" jdbcType="INTEGER" property="pointCodeIssueNo" />
    <result column="pointCodeIssueRequestNo" jdbcType="INTEGER" property="pointCodeIssueRequestNo" />
    <result column="memberNo" jdbcType="INTEGER" property="memberNo" />
    <result column="pointCode" jdbcType="VARCHAR" property="pointCode" />
    <result column="useStatus" jdbcType="VARCHAR" property="useStatus" />
    <result column="payAmount" jdbcType="INTEGER" property="payAmount" />
    <result column="accPointRate" jdbcType="REAL" property="accPointRate" />
    <result column="accPointAmount" jdbcType="REAL" property="accPointAmount" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    pointCodeIssueNo, pointCodeIssueRequestNo, memberNo, pointCode, useStatus, payAmount, 
    accPointRate, accPointAmount, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from point_code_issue
    where pointCodeIssueNo = #{pointCodeIssueNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from point_code_issue
    where pointCodeIssueNo = #{pointCodeIssueNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.PointCodeIssue">
    insert into point_code_issue (pointCodeIssueNo, pointCodeIssueRequestNo, 
      memberNo, pointCode, useStatus, 
      payAmount, accPointRate, accPointAmount, 
      createTime, updateTime)
    values (#{pointCodeIssueNo,jdbcType=INTEGER}, #{pointCodeIssueRequestNo,jdbcType=INTEGER}, 
      #{memberNo,jdbcType=INTEGER}, #{pointCode,jdbcType=VARCHAR}, #{useStatus,jdbcType=VARCHAR}, 
      #{payAmount,jdbcType=INTEGER}, #{accPointRate,jdbcType=REAL}, #{accPointAmount,jdbcType=REAL}, 
      NOW(), NOW())
      
          
    <selectKey keyProperty="pointCodeIssueNo" resultType="java.lang.Integer" order ="AFTER">
		    SELECT LAST_INSERT_ID()
	 </selectKey>	
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.PointCodeIssue">
    insert into point_code_issue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pointCodeIssueNo != null">
        pointCodeIssueNo,
      </if>
      <if test="pointCodeIssueRequestNo != null">
        pointCodeIssueRequestNo,
      </if>
      <if test="memberNo != null">
        memberNo,
      </if>
      <if test="pointCode != null">
        pointCode,
      </if>
      <if test="useStatus != null">
        useStatus,
      </if>
      <if test="payAmount != null">
        payAmount,
      </if>
      <if test="accPointRate != null">
        accPointRate,
      </if>
      <if test="accPointAmount != null">
        accPointAmount,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pointCodeIssueNo != null">
        #{pointCodeIssueNo,jdbcType=INTEGER},
      </if>
      <if test="pointCodeIssueRequestNo != null">
        #{pointCodeIssueRequestNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="pointCode != null">
        #{pointCode,jdbcType=VARCHAR},
      </if>
      <if test="useStatus != null">
        #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="accPointRate != null">
        #{accPointRate,jdbcType=REAL},
      </if>
      <if test="accPointAmount != null">
        #{accPointAmount,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.PointCodeIssue">
    update point_code_issue
    <set>
      <if test="pointCodeIssueRequestNo != null">
        pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER},
      </if>
      <if test="memberNo != null">
        memberNo = #{memberNo,jdbcType=INTEGER},
      </if>
      <if test="pointCode != null">
        pointCode = #{pointCode,jdbcType=VARCHAR},
      </if>
      <if test="useStatus != null">
        useStatus = #{useStatus,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        payAmount = #{payAmount,jdbcType=INTEGER},
      </if>
      <if test="accPointRate != null">
        accPointRate = #{accPointRate,jdbcType=REAL},
      </if>
      <if test="accPointAmount != null">
        accPointAmount = #{accPointAmount,jdbcType=REAL},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pointCodeIssueNo = #{pointCodeIssueNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.PointCodeIssue">
    update point_code_issue
    set pointCodeIssueRequestNo = #{pointCodeIssueRequestNo,jdbcType=INTEGER},
      memberNo = #{memberNo,jdbcType=INTEGER},
      pointCode = #{pointCode,jdbcType=VARCHAR},
      useStatus = #{useStatus,jdbcType=VARCHAR},
      payAmount = #{payAmount,jdbcType=INTEGER},
      accPointRate = #{accPointRate,jdbcType=REAL},
      accPointAmount = #{accPointAmount,jdbcType=REAL},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = NOW()
    where pointCodeIssueNo = #{pointCodeIssueNo,jdbcType=INTEGER}
  </update>
</mapper>