<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.returnp.pointback.dao.mapper.GiftCardPaymentMapper">
  <resultMap id="BaseResultMap" type="com.returnp.pointback.model.GiftCardPayment">
    <id column="giftCardPaymentNo" jdbcType="INTEGER" property="giftCardPaymentNo" />
    <result column="affiliateNo" jdbcType="INTEGER" property="affiliateNo" />
    <result column="giftCardIssueNo" jdbcType="INTEGER" property="giftCardIssueNo" />
    <result column="giftCardPaymentAmount" jdbcType="INTEGER" property="giftCardPaymentAmount" />
    <result column="memberBankAccountNo" jdbcType="INTEGER" property="memberBankAccountNo" />
    <result column="refundRate" jdbcType="REAL" property="refundRate" />
    <result column="refundAmount" jdbcType="REAL" property="refundAmount" />
    <result column="refundStatus" jdbcType="VARCHAR" property="refundStatus" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    giftCardPaymentNo, affiliateNo, giftCardIssueNo, giftCardPaymentAmount, memberBankAccountNo, 
    refundRate, refundAmount, refundStatus, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gift_card_payment
    where giftCardPaymentNo = #{giftCardPaymentNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gift_card_payment
    where giftCardPaymentNo = #{giftCardPaymentNo,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.returnp.pointback.model.GiftCardPayment">
    insert into gift_card_payment (giftCardPaymentNo, affiliateNo, giftCardIssueNo, 
      giftCardPaymentAmount, memberBankAccountNo, 
      refundRate, refundAmount, refundStatus, 
      createTime, updateTime)
    values (#{giftCardPaymentNo,jdbcType=INTEGER}, #{affiliateNo,jdbcType=INTEGER}, #{giftCardIssueNo,jdbcType=INTEGER}, 
      #{giftCardPaymentAmount,jdbcType=INTEGER}, #{memberBankAccountNo,jdbcType=VARCHAR}, 
      #{refundRate,jdbcType=REAL}, #{refundAmount,jdbcType=REAL}, #{refundStatus,jdbcType=VARCHAR}, 
      NOW(), NOW())
          <selectKey keyProperty="giftCardPaymentNo" resultType="java.lang.Integer" order ="AFTER">
		    SELECT LAST_INSERT_ID()
	 </selectKey>	
  </insert>
  <insert id="insertSelective" parameterType="com.returnp.pointback.model.GiftCardPayment">
    insert into gift_card_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="giftCardPaymentNo != null">
        giftCardPaymentNo,
      </if>
      <if test="affiliateNo != null">
        affiliateNo,
      </if>
      <if test="giftCardIssueNo != null">
        giftCardIssueNo,
      </if>
      <if test="giftCardPaymentAmount != null">
        giftCardPaymentAmount,
      </if>
      <if test="memberBankAccountNo != null">
        memberBankAccountNo,
      </if>
      <if test="refundRate != null">
        refundRate,
      </if>
      <if test="refundAmount != null">
        refundAmount,
      </if>
      <if test="refundStatus != null">
        refundStatus,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="giftCardPaymentNo != null">
        #{giftCardPaymentNo,jdbcType=INTEGER},
      </if>
      <if test="affiliateNo != null">
        #{affiliateNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardIssueNo != null">
        #{giftCardIssueNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardPaymentAmount != null">
        #{giftCardPaymentAmount,jdbcType=INTEGER},
      </if>
      <if test="memberBankAccountNo != null">
        #{memberBankAccountNo,jdbcType=INTEGER},
      </if>
      <if test="refundRate != null">
        #{refundRate,jdbcType=REAL},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=REAL},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.returnp.pointback.model.GiftCardPayment">
    update gift_card_payment
    <set>
      <if test="affiliateNo != null">
        affiliateNo = #{affiliateNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardIssueNo != null">
        giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER},
      </if>
      <if test="giftCardPaymentAmount != null">
        giftCardPaymentAmount = #{giftCardPaymentAmount,jdbcType=INTEGER},
      </if>
      <if test="memberBankAccountNo != null">
        memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER},
      </if>
      <if test="refundRate != null">
        refundRate = #{refundRate,jdbcType=REAL},
      </if>
      <if test="refundAmount != null">
        refundAmount = #{refundAmount,jdbcType=REAL},
      </if>
      <if test="refundStatus != null">
        refundStatus = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where giftCardPaymentNo = #{giftCardPaymentNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.returnp.pointback.model.GiftCardPayment">
    update gift_card_payment
    set affiliateNo = #{affiliateNo,jdbcType=INTEGER},
      giftCardIssueNo = #{giftCardIssueNo,jdbcType=INTEGER},
      giftCardPaymentAmount = #{giftCardPaymentAmount,jdbcType=INTEGER},
      memberBankAccountNo = #{memberBankAccountNo,jdbcType=INTEGER},
      refundRate = #{refundRate,jdbcType=REAL},
      refundAmount = #{refundAmount,jdbcType=REAL},
      refundStatus = #{refundStatus,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = NOW()
    where giftCardPaymentNo = #{giftCardPaymentNo,jdbcType=INTEGER}
  </update>
</mapper>